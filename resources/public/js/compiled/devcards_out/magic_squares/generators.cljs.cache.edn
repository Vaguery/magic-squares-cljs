{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name magic-squares.generators, :imports nil, :requires nil, :uses nil, :defs {rotate-seq {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([how-many seq]))}, :name magic-squares.generators/rotate-seq, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 17, :method-params ([how-many seq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([how-many seq]))}, diags-of-matrix {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 31, :column 7, :end-line 31, :end-column 22, :arglists (quote ([matrix offset]))}, :name magic-squares.generators/diags-of-matrix, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 22, :method-params ([matrix offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matrix offset]))}, magic-square {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 64, :column 7, :end-line 64, :end-column 19, :arglists (quote ([side diag-count]))}, :name magic-squares.generators/magic-square, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 19, :method-params ([side diag-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([side diag-count]))}, transpose {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([matrix]))}, :name magic-squares.generators/transpose, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 16, :method-params ([matrix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([matrix]))}, rows-of-matrix {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 21, :column 7, :end-line 21, :end-column 21, :arglists (quote ([matrix label]))}, :name magic-squares.generators/rows-of-matrix, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 21, :method-params ([matrix label]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matrix label]))}, many-diags {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([matrix howmany]))}, :name magic-squares.generators/many-diags, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 17, :method-params ([matrix howmany]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([matrix howmany]))}, subset-errors {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 103, :column 7, :end-line 103, :end-column 20, :arglists (quote ([hypergraph assignment-vector]))}, :name magic-squares.generators/subset-errors, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 20, :method-params ([hypergraph assignment-vector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([hypergraph assignment-vector]))}, semimagic-square {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 55, :column 7, :end-line 55, :end-column 23, :arglists (quote ([side]))}, :name magic-squares.generators/semimagic-square, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 23, :method-params ([side]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([side]))}, total-error {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 115, :column 7, :end-line 115, :end-column 18, :arglists (quote ([hypergraph assignment-vector]))}, :name magic-squares.generators/total-error, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 18, :method-params ([hypergraph assignment-vector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([hypergraph assignment-vector]))}, abs {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 98, :column 7, :end-line 98, :end-column 10, :arglists (quote ([n]))}, :name magic-squares.generators/abs, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, target-sum {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 91, :column 7, :end-line 91, :end-column 17, :arglists (quote ([hypergraph assignment-vector]))}, :name magic-squares.generators/target-sum, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 17, :method-params ([hypergraph assignment-vector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([hypergraph assignment-vector]))}, fill-square {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 3, :column 7, :end-line 3, :end-column 18, :arglists (quote ([side]))}, :name magic-squares.generators/fill-square, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 18, :method-params ([side]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([side]))}, sums-of-subsets {:protocol-inline nil, :meta {:file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :line 79, :column 7, :end-line 79, :end-column 22, :arglists (quote ([hypergraph assignment-vector]))}, :name magic-squares.generators/sums-of-subsets, :variadic false, :file "/Users/bill/programming/magic-squares/src/magic_squares/generators.cljs", :end-column 22, :method-params ([hypergraph assignment-vector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([hypergraph assignment-vector]))}}, :require-macros nil, :doc nil}